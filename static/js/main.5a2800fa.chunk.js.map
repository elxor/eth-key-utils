{"version":3,"sources":["pages/Home/Home.module.scss","components/Loading/Loading.module.scss","components/CopyToClipboard/CopyToClipboard.module.scss","components/Wrapper/Wrapper.module.scss","components/Button/Button.module.scss","components/Download/Download.module.scss","pages/KeystoreFromPrivate/KeystoreFromPrivate.js","components/Input/Input.js","components/Input/Input.module.scss","components/TextArea/TextArea.module.scss","components/InputPassword/InputPassword.js","components/BackHome/BackHome.js","components/Wrapper/Wrapper.js","components/Button/Button.js","pages/Mnemonic/Mnemonic.module.scss","components/Loading/Loading.js","pages/Extract/Extract.module.scss","pages/Home/Home.js","components/InputFile/InputFile.js","components/CopyToClipboard/CopyToClipboard.js","components/Download/Download.js","utils/readFile.js","utils/getAccoutFromFile.js","pages/Extract/Extract.js","pages/ChangePass/ChangePass.js","components/KeystoreInfo/KeystoreInfo.js","pages/IterationCount/IterationCount.js","components/TextArea/TextArea.js","components/Switch/Switch.js","components/ExtraWord/ExtraWord.js","components/Select/Select.js","components/CustomPath/CustomPath.js","components/Account/Account.js","pages/Mnemonic/Mnemonic.js","utils/getAccountsFromMnemonic.js","pages/PageNotFound/PageNotFound.js","App.js","index.js","pages/ChangePass/ChangePass.module.scss","pages/KeystoreFromPrivate/KeystoreFromPrivate.module.scss","components/ExtraWord/ExtraWord.module.scss","utils/generateKeystore.js","utils/downloadFile.js","pages/IterationCount/IterationCount.module.scss","components/Account/Account.module.scss","components/InputFile/InputFile.module.scss","components/KeystoreInfo/KeystoreInfo.module.scss","pages/PageNotFound/PageNotFound.module.scss","components/BackHome/BackHome.module.scss","components/InputPassword/InputPassword.module.scss","components/Switch/Switch.module.scss","components/Select/Select.module.scss","components/CustomPath/CustomPath.module.scss"],"names":["module","exports","KeystoreFromPrivate","useState","privateKey","password","loading","valid","privKey","pass","state","setState","className","classes","title","content","itemWrapper","text","onChange","e","isValid","value","withoutPrefix","web3Utils","stripHexPrefix","lengthValid","length","isHex","isValidPrivate","Buffer","from","validationPrivateKey","target","placeholder","disabled","onClick","generateKeystore","then","result","name","downloadFile","Input","props","input","type","autoComplete","autoCorrect","spellCheck","InputPassword","visible","setVisible","wrapper","customClass","iconEye","BackHome","exact","to","backHome","icon","line","Wrapper","children","Button","button","Loading","iconSpin","Home","noticeWrapper","notice","href","outlink","rel","item","link","description","InputFile","inputFileWrapper","htmlFor","label","id","inputFile","fileName","CopyToClipboard","textToCopy","check","timeout","useRef","useEffect","clearTimeout","current","navigator","clipboard","writeText","setTimeout","copy","iconClass","Download","account","fileUrl","filename","address","slice","JSON","stringify","blob","Blob","downloadUrl","URL","createObjectURL","revokeObjectURL","downloadButton","download","readFile","file","a","Promise","resolve","reader","FileReader","onload","readAsText","getAccoutFromFile","json","reject","keyObject","parse","keythereum","recover","ArrayBuffer","isView","toString","Error","Extract","fileContent","error","setAccount","validation","files","inputPassword","toChecksumAddress","message","ChangePass","oldPass","newPass","catch","KeystoreInfo","infoWrapper","kdfName","inputCount","warning","IterationCount","count","kdf","countValid","iterationCount","crypto","kdfparams","n","c","num","test","isCountValid","TextArea","textarea","SimpleSwitch","switcher","checkbox","checked","ExtraWord","visiblePart","span","switcherWrapper","Switch","clearValue","hiddenPart","Select","selectWrapper","selectCustom","options","map","i","angleDown","aria-hidden","CustomPath","customPath","add","addClickHandler","Account","accounts","index","numberAccount","Mnemonic","textArea","mnemonic","isCustomPath","path","pathList","rangeAccounts","start","end","inputExtraWord","extraWord","errorText","notValidMnemonic","mGetAccountsFromMnemonic","useCallback","range","num1","num2","seed","bip39","root","hdkey","fromMasterSeed","wallets","derive","pubKey","privateToPublic","_privateKey","publicToAddress","checkSumAddress","getAccountsFromMnemonic","mnemonicWords","trim","accountsWrapper","Object","entries","curr","nav","navLeft","Number","keys","navRight","PageNotFound","unknown","code","home","App","component","app","StrictMode","ReactDOM","render","document","getElementById","modPrivateKey","params","keyBytes","ivBytes","dk","create","cipher","dklen","r","p","dump","salt","iv","Date","toISOString","replace","jsonContent","exportToFile","element","createElement","setAttribute","style","display","body","appendChild","click","removeChild"],"mappings":"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","file":"static/js/main.5a2800fa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Home_content__3D3ON\",\"title\":\"Home_title__1ZGFB\",\"noticeWrapper\":\"Home_noticeWrapper__3OpG0\",\"notice\":\"Home_notice__3MtuV\",\"outlink\":\"Home_outlink__3XT8B\",\"item\":\"Home_item__X-1dE\",\"link\":\"Home_link__2JkBO\",\"description\":\"Home_description__35GLz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading\":\"Loading_loading__18Mwd\",\"iconSpin\":\"Loading_iconSpin__Nf_Zl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"copy\":\"CopyToClipboard_copy__2k6KA\",\"iconClass\":\"CopyToClipboard_iconClass__2MN7s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Wrapper_wrapper__3lEaB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__q5HGP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"downloadButton\":\"Download_downloadButton__21gwK\"};","import React, { Fragment, useState } from 'react';\r\nimport { isValidPrivate } from 'ethereumjs-util';\r\nimport web3Utils from 'web3-utils';\r\nimport classes from './KeystoreFromPrivate.module.scss';\r\nimport Wrapper from '../../components/Wrapper/Wrapper';\r\nimport BackHome from '../../components/BackHome/BackHome';\r\nimport Input from '../../components/Input/Input';\r\nimport InputPassword from '../../components/InputPassword/InputPassword';\r\nimport Button from '../../components/Button/Button';\r\nimport Loading from '../../components/Loading/Loading';\r\nimport { generateKeystore } from '../../utils/generateKeystore';\r\nimport { downloadFile } from '../../utils/downloadFile';\r\n\r\nconst KeystoreFromPrivate = () => {\r\n    const [state, setState] = useState({\r\n        privateKey: '',\r\n        password: '',\r\n        loading: false,\r\n        valid: {\r\n            privKey: false,\r\n            pass: false\r\n        }\r\n    });\r\n\r\n    const validationPass = value => {\r\n        if (value && value !== '') {\r\n            return true;\r\n        } \r\n        return false;\r\n    }\r\n\r\n    const validationPrivateKey = value => {\r\n        const withoutPrefix = web3Utils.stripHexPrefix(value);\r\n        const lengthValid = withoutPrefix.length === 64;\r\n\r\n        if (web3Utils.isHex(value) && lengthValid) {\r\n            const valid = isValidPrivate(Buffer.from(withoutPrefix, 'hex'));\r\n            return valid;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    const inputPrivateKeyHandler = e => {\r\n        const isValid = validationPrivateKey(e.target.value);\r\n\r\n        setState(state => ({\r\n            ...state,\r\n            privateKey: e.target.value,\r\n            valid: {...state.valid, privKey: isValid}\r\n        }));\r\n    }\r\n\r\n    const inputPasswordHandler = e => {\r\n        const isValid = validationPass(e.target.value);\r\n\r\n        setState(state => ({\r\n            ...state,\r\n            password: e.target.value,\r\n            valid: {...state.valid, pass: isValid}\r\n        }))\r\n    }\r\n\r\n    const generateClickHandler = () => {\r\n        setState(state => ({\r\n            ...state,\r\n            loading: true\r\n        }));\r\n\r\n        generateKeystore(\r\n            state.privateKey,\r\n            state.password\r\n        ).then(result => {\r\n\r\n            const [name, content] = result;\r\n            downloadFile(name, content);\r\n\r\n            setState(state => ({\r\n                ...state,\r\n                loading: false,\r\n                privateKey: '',\r\n                password: '',\r\n                valid: {\r\n                    ...state.valid,\r\n                    privKey: false,\r\n                    pass: false\r\n                }\r\n            }));\r\n        });\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <BackHome />\r\n            <h1 className={classes.title}>Generate Keystore File From Private Key</h1>\r\n            <Wrapper>\r\n                <div className={classes.content}>\r\n                    <div className={classes.itemWrapper}>\r\n                        <p className={classes.text}>\r\n                            Please type in your private key\r\n                        </p>\r\n                        <Input\r\n                            onChange={inputPrivateKeyHandler}\r\n                            value={state.privateKey}\r\n                            placeholder=\"Private key\"\r\n                        />\r\n                    </div>\r\n                    <div className={classes.itemWrapper}>\r\n                        <p className={classes.text}>\r\n                            Password\r\n                        </p>\r\n                        <InputPassword\r\n                            onChange={inputPasswordHandler}\r\n                            value={state.password}\r\n                            placeholder=\"New password\"\r\n                        />\r\n                    </div>\r\n                    {state.loading\r\n                        ? <Loading />\r\n                        : <Button\r\n                            disabled={state.valid.privKey\r\n                                && state.valid.pass\r\n                                ? '' : 'disabled'}\r\n                            onClick={generateClickHandler}\r\n                        >Generate Keystore\r\n                        </Button>\r\n                    }\r\n                </div>\r\n            </Wrapper>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default KeystoreFromPrivate;\r\n","import React from 'react'\r\nimport classes from './Input.module.scss';\r\n\r\nconst Input = (props) => {\r\n    return (\r\n        <input\r\n            className={classes.input}\r\n            onChange={props.onChange}\r\n            type=\"text\"\r\n            placeholder={props.placeholder}\r\n            autoComplete=\"off\"\r\n            autoCorrect=\"off\"\r\n            spellCheck=\"false\"\r\n            value={props.value}\r\n        />\r\n    );\r\n}\r\n\r\nexport default Input;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__2K_Fd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textarea\":\"TextArea_textarea__2eRCz\"};","import React, { useState } from 'react';\r\nimport classes from './InputPassword.module.scss';\r\n\r\nconst InputPassword = (props) => {\r\n    const [visible, setVisible] = useState(false);\r\n\r\n    const clickHandler = () => {\r\n        setVisible(!visible);\r\n    }\r\n\r\n    return (\r\n        <div className={`${classes.wrapper} ${props.customClass || ''}`}>\r\n            <input\r\n                className={classes.input}\r\n                onChange={props.onChange}\r\n                type={visible ? 'text' : 'password'}\r\n                placeholder={props.placeholder}\r\n                autoComplete=\"off\"\r\n                autoCorrect=\"off\"\r\n                spellCheck=\"false\"\r\n                value={props.value}\r\n            />\r\n            <i\r\n                className={`fa ${visible ? 'fa-eye-slash' :'fa-eye'} ${classes.iconEye}`}\r\n                onClick={clickHandler}\r\n            ></i>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InputPassword;\r\n","import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport classes from './BackHome.module.scss';\r\n\r\nconst BackHome = () => {\r\n    return (\r\n        <Fragment>\r\n            <Link exact=\"true\" to=\"/\" className={classes.backHome}>\r\n                <i className={`fa fa-long-arrow-left ${classes.icon}`}></i>\r\n                Back Home\r\n            </Link>\r\n            <div className={classes.line}></div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default BackHome;\r\n","import React from 'react';\r\nimport classes from './Wrapper.module.scss';\r\n\r\nconst Wrapper = ({children}) => {\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Wrapper;\r\n","import React from 'react';\r\nimport classes from './Button.module.scss';\r\n\r\nconst Button = (props) => {\r\n    return (\r\n        <button\r\n            className={classes.button}\r\n            onClick={props.onClick}\r\n            disabled={props.disabled}\r\n        >\r\n            {props.children}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default Button;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Mnemonic_title__34AtC\",\"content\":\"Mnemonic_content__3tZem\",\"path\":\"Mnemonic_path__1yXVN\",\"accountsWrapper\":\"Mnemonic_accountsWrapper__32Qbp\",\"notice\":\"Mnemonic_notice__pmxGb\",\"navLeft\":\"Mnemonic_navLeft__18AT0\",\"navRight\":\"Mnemonic_navRight__9Zxrf\"};","import React from 'react';\r\nimport classes from './Loading.module.scss';\r\n\r\nconst Loading = () => {\r\n    return (\r\n        <div className={classes.loading}>\r\n            <i className={`fa fa-spinner fa-spin ${classes.iconSpin}`}></i>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loading;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Extract_title__3N_k3\",\"content\":\"Extract_content__2uPom\",\"inputPassword\":\"Extract_inputPassword__1eScH\",\"error\":\"Extract_error__3Zt_0\",\"account\":\"Extract_account__1K-OO\",\"text\":\"Extract_text__2br41\"};","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport classes from './Home.module.scss';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div className={classes.content}>\r\n            <h1 className={classes.title}>Ethereum Key Utils</h1>\r\n            <div className={classes.noticeWrapper}>\r\n                <p className={classes.notice}>\r\n                    For security, use these utilities only offline.\r\n                </p>\r\n                <p className={classes.notice}>\r\n                    You can download this app to your computer and run it without the Internet.\r\n                </p>\r\n                <a href=\"https://github.com/elxor/eth-key-utils#readme\"\r\n                className={classes.outlink}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\">\r\n                    Download from GitHub\r\n                </a>\r\n            </div>\r\n            \r\n\r\n            <div className={classes.item}>\r\n                <Link\r\n                    className={classes.link}\r\n                    to=\"/extract-private-key\"\r\n                >Extract Private Key From Keystore File\r\n                </Link>\r\n                <p className={classes.description}>\r\n                    This tool allows to you extract private key from standard ethereum keystore file with password. You can copy your private key or save it as unencrypted txt file.\r\n                </p>\r\n            </div>\r\n\r\n            <div className={classes.item}>\r\n                <Link\r\n                    className={classes.link}\r\n                    to=\"/change-keystore-pass\"\r\n                >Change Keystore File Password\r\n                </Link>\r\n                <p className={classes.description}>\r\n                    Change the password of your keystore file. You will get the same keystore with new password.\r\n                </p>\r\n            </div>\r\n\r\n            <div className={classes.item}>\r\n                <Link\r\n                    className={classes.link}\r\n                    to=\"/keystore-from-private\"\r\n                >Generate Keystore File From Private Key\r\n                </Link>\r\n                <p className={classes.description}>\r\n                    Encrypt your private key with password and get standard ethereum keystore file which fully compatible with other wallets such as MEW.\r\n                </p>\r\n            </div>\r\n\r\n            <div className={classes.item}>\r\n                <Link\r\n                    className={classes.link}\r\n                    to=\"/accounts-from-mnemonic\"\r\n                >Get Accounts From Mnemonic Phrase\r\n                </Link>\r\n                <p className={classes.description}>\r\n                    This tool allows to you get accounts from your mnemonic phrase (seed). You can copy accounts private keys and addresses or save it as unencrypted txt files.\r\n                </p>\r\n            </div>\r\n\r\n            <div className={classes.item}>\r\n                <Link\r\n                    className={classes.link}\r\n                    to=\"/change-iteration-count\"\r\n                >Change Iteration Count of Key Derivation Function (KDF)\r\n                </Link>\r\n                <p className={classes.description}>\r\n                    Password-based key derivation function such as scrypt used to encrypt the ethereum keystore file use a high iteration count to reduce vulnerabilities of brute-force attacks. With this tool you can change iteration count of key derivation function for keystore file. Make your keystore more resilient to brute-force attacks or reduce iteration count to other wallets do not freeze when you decrypting keystore file.\r\n                </p>\r\n            </div>\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport classes from './InputFile.module.scss';\r\n\r\nconst InputFile = (props) => {\r\n    return (\r\n        <div className={classes.inputFileWrapper}>\r\n            <label htmlFor=\"inputId\" className={classes.label}>Select Keystore File...</label>\r\n            <input\r\n                id=\"inputId\"\r\n                type=\"file\"\r\n                onChange={props.onChange}\r\n                className={classes.inputFile}\r\n                onClick={e => e.target.value = null}\r\n            />    \r\n            <p className={classes.fileName}>\r\n                {props.name}\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InputFile;\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport classes from './CopyToClipboard.module.scss';\r\n\r\n\r\nconst CopyToClipboard = ({textToCopy}) => {\r\n\r\n    const [state, setState] = useState({\r\n        check: false\r\n    });\r\n\r\n    const timeout = useRef(null);\r\n\r\n    const clickHandler = () => {\r\n        navigator.clipboard.writeText(textToCopy);\r\n\r\n        setState(state => ({\r\n            ...state,\r\n            check: true\r\n        }));\r\n\r\n        timeout.current = setTimeout(() => {\r\n            setState(state => ({\r\n                ...state,\r\n                check: false\r\n            }));\r\n        }, 1000);\r\n    }\r\n\r\n    useEffect(() => {\r\n        return () => clearTimeout(timeout.current);\r\n    }, []);\r\n\r\n    return (\r\n        <div\r\n            onClick={clickHandler}\r\n            className={classes.copy}\r\n        >\r\n            <i className={`\r\n                ${state.check ? 'fa fa-check': 'fa fa-copy'}\r\n                ${classes.iconClass}`}\r\n            ></i>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CopyToClipboard;\r\n","import React, { useState, useEffect } from 'react';\r\nimport classes from './Download.module.scss';\r\n\r\nconst Download = ({account, children}) => {\r\n\r\n    const [state, setState] = useState({\r\n        fileUrl: '',\r\n        filename: ''\r\n    });\r\n\r\n    useEffect(() => {\r\n        const name = `${account.address.slice(2)}.txt`;\r\n\r\n        const content = JSON.stringify(account);\r\n        const blob = new Blob([content], {type: 'text/plain;charset=utf-8'});\r\n        const downloadUrl = URL.createObjectURL(blob);\r\n\r\n        setState(state => ({\r\n            ...state,\r\n            fileUrl: downloadUrl,\r\n            filename: name\r\n        }));\r\n\r\n        return () => {\r\n            URL.revokeObjectURL(downloadUrl);\r\n            setState(state => ({...state, fileUrl: ''}));\r\n        }\r\n    }, [account]);\r\n\r\n    \r\n    return (\r\n        <a className={classes.downloadButton}\r\n            download={state.filename}\r\n            href={state.fileUrl}\r\n            rel=\"noopener noreferrer\"\r\n        >{children}</a>\r\n    )\r\n}\r\n\r\nexport default Download;\r\n","export const readFile = async (file) => {\r\n\r\n    const content = await new Promise(resolve => {\r\n\r\n        const name = file.name.length < 16\r\n            ? file.name\r\n            : file.name.slice(0, 7) + '...' + file.name.slice(-8);\r\n\r\n        const reader = new FileReader();\r\n        reader.onload = () => resolve([name, reader.result]);\r\n        reader.readAsText(file);\r\n    });\r\n\r\n    return content;\r\n}","import keythereum from 'keythereum';\r\n\r\nexport const getAccoutFromFile = async (json, password) => {\r\n\r\n    const result = await new Promise((resolve, reject) => {\r\n        const keyObject = JSON.parse(json);\r\n\r\n        keythereum.recover(password, keyObject, result => {\r\n            if (ArrayBuffer.isView(result)) {\r\n                const address = keyObject.address;\r\n                const privateKey = result.toString('hex');\r\n\r\n                resolve([address, privateKey]);\r\n            } else {\r\n                reject(new Error('message authentication code mismatch'));\r\n            }\r\n        });\r\n    });\r\n\r\n    return result;\r\n}","import React, { Fragment, useState } from 'react';\r\nimport web3Utils from 'web3-utils';\r\nimport classes from './Extract.module.scss';\r\nimport BackHome from '../../components/BackHome/BackHome';\r\nimport Wrapper from '../../components/Wrapper/Wrapper';\r\nimport InputFile from '../../components/InputFile/InputFile';\r\nimport InputPassword from '../../components/InputPassword/InputPassword';\r\nimport Button from '../../components/Button/Button';\r\nimport Loading from '../../components/Loading/Loading';\r\nimport CopyToClipboard from '../../components/CopyToClipboard/CopyToClipboard';\r\nimport Download from '../../components/Download/Download';\r\nimport { readFile } from '../../utils/readFile';\r\nimport { getAccoutFromFile } from '../../utils/getAccoutFromFile';\r\n\r\nconst Extract = () => {\r\n    const [state, setState] = useState({\r\n        fileName: 'no file selected',\r\n        fileContent: '',\r\n        password: '',\r\n        valid: {file: false, pass: false},\r\n        loading: false,\r\n        error: ''\r\n    });\r\n\r\n    const [account, setAccount] = useState({\r\n        address: '',\r\n        privateKey: ''\r\n    });\r\n\r\n    const validation = value => {\r\n        if (value && value !== '') {\r\n            return true;\r\n        } \r\n        return false;\r\n    }\r\n\r\n    const inputFileHandler = e => {\r\n        const file = e.target.files[0];\r\n\r\n        readFile(file).then(result => {\r\n            const [name, content] = result;\r\n            const isValid = validation(content);\r\n\r\n            setState(state => ({\r\n                ...state,\r\n                fileName: name,\r\n                fileContent: content,\r\n                valid: {...state.valid, file: isValid}\r\n            }));\r\n        });\r\n    }\r\n\r\n    const inputPasswordHandler = e => {\r\n        const isValid = validation(e.target.value);\r\n\r\n        setState(state => ({\r\n            ...state,\r\n            password: e.target.value,\r\n            valid: {...state.valid, pass: isValid}\r\n        }));\r\n    }\r\n\r\n    const extractClickHandler = () => {\r\n        setState(state => ({\r\n            ...state,\r\n            loading: true,\r\n            error: ''\r\n        }));\r\n\r\n        getAccoutFromFile(state.fileContent, state.password).then(\r\n            result => {\r\n                setState(state => ({\r\n                    ...state,\r\n                    loading: false,\r\n                    fileName: 'no file selected',\r\n                    fileContent: '',\r\n                    password: '',\r\n                    valid: {file: false, pass: false},\r\n                }));\r\n\r\n                setAccount(account => ({\r\n                    ...account,\r\n                    address: web3Utils.toChecksumAddress(result[0]),\r\n                    privateKey: result[1],\r\n                }));\r\n            },\r\n            error => {\r\n                setState(state => ({\r\n                    ...state,\r\n                    error: error.message,\r\n                    loading: false\r\n                }));\r\n            }\r\n        );\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <BackHome />\r\n            <h1 className={classes.title}>Extract Private Key From Keystore File</h1>\r\n            <Wrapper>\r\n                <div className={classes.content}>\r\n                    <InputFile\r\n                        onChange={inputFileHandler}\r\n                        name={state.fileName}\r\n                    />\r\n                    <InputPassword\r\n                        customClass={classes.inputPassword}\r\n                        onChange={inputPasswordHandler}\r\n                        value={state.password}\r\n                        placeholder=\"Enter password\"\r\n                    />\r\n\r\n                    {state.loading\r\n                        ? <Loading />\r\n                        : <Button\r\n                            disabled={state.valid.file\r\n                                && state.valid.pass\r\n                                ? '' : 'disabled'}\r\n                            onClick={extractClickHandler}\r\n                        >Extract</Button>\r\n                    }\r\n\r\n                    {state.error !== '' &&\r\n                        <div className={classes.error}>\r\n                            Error: {state.error}!\r\n                        </div>\r\n                    }\r\n                </div>\r\n                {account.address !== '' &&\r\n                    <div className={classes.account}>\r\n                        <div>\r\n                            <p className={classes.text}>Address</p>\r\n                            <div className=\"wordwrap\">\r\n                                {account.address}\r\n                                <CopyToClipboard\r\n                                    textToCopy={account.address}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <p className={classes.text}>Private Key</p>\r\n                            <div className=\"wordwrap\">\r\n                                {account.privateKey}\r\n                                <CopyToClipboard\r\n                                    textToCopy={account.privateKey}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <Download\r\n                            account={account}\r\n                        >Download\r\n                        </Download>\r\n                    </div>\r\n                }\r\n            </Wrapper>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Extract;\r\n","import React, { Fragment, useState } from 'react';\r\nimport classes from './ChangePass.module.scss';\r\nimport BackHome from '../../components/BackHome/BackHome';\r\nimport Wrapper from '../../components/Wrapper/Wrapper';\r\nimport InputFile from '../../components/InputFile/InputFile';\r\nimport InputPassword from '../../components/InputPassword/InputPassword';\r\nimport Button from '../../components/Button/Button';\r\nimport Loading from '../../components/Loading/Loading';\r\nimport { getAccoutFromFile } from '../../utils/getAccoutFromFile';\r\nimport { generateKeystore } from '../../utils/generateKeystore';\r\nimport { downloadFile } from '../../utils/downloadFile';\r\nimport { readFile } from '../../utils/readFile';\r\n\r\n\r\nconst ChangePass = () => {\r\n    const [state, setState] = useState({\r\n        fileName: 'no file selected',\r\n        fileContent: '',\r\n        oldPass: '',\r\n        newPass: '',\r\n        loading: false,\r\n        valid: {\r\n            file: false,\r\n            oldPass: false,\r\n            newPass: false\r\n        },\r\n        message: '',\r\n        error: ''\r\n    });\r\n\r\n    const validation = value => {\r\n        if (value && value !== '') {\r\n            return true;\r\n        } \r\n        return false;\r\n    }\r\n\r\n    const inputFileHandler = e => {\r\n        const file = e.target.files[0];\r\n\r\n        readFile(file).then(result => {\r\n            const [name, content] = result;\r\n            const isValid = validation(content);\r\n\r\n            setState(state => ({\r\n                ...state,\r\n                fileName: name,\r\n                fileContent: content,\r\n                valid: {...state.valid, file: isValid}\r\n            }));\r\n        });\r\n    }\r\n\r\n\r\n    const changePasswordClickHandler = () => {\r\n        setState(state => ({\r\n            ...state,\r\n            loading: true,\r\n            message: 'Start decrypting keystore file with password...',\r\n            error: ''\r\n        }));\r\n\r\n        getAccoutFromFile(state.fileContent, state.oldPass).then(\r\n            result => {\r\n                setState(state => ({\r\n                    ...state,\r\n                    message: 'Creating keystore file with new password...'\r\n                }));\r\n                \r\n                return generateKeystore(result[1], state.newPass)\r\n            }\r\n        ).then(\r\n            result => {\r\n                const [name, content] = result;\r\n                downloadFile(name, content);\r\n\r\n                setState(state => ({\r\n                    ...state,\r\n                    fileName: 'no file selected',\r\n                    fileContent: '',\r\n                    oldPass: '',\r\n                    newPass: '',\r\n                    loading: false,\r\n                    message: 'Password changed successfully!',\r\n                    valid: {\r\n                        ...state.valid,\r\n                        file: false,\r\n                        oldPass: false,\r\n                        newPass: false\r\n                    }\r\n                }));\r\n            }\r\n        ).catch(error => {\r\n            setState(state => ({\r\n                ...state,\r\n                error: error.message,\r\n                message: '',\r\n                loading: false\r\n            }));\r\n        });\r\n    }\r\n\r\n    const oldPasswordInputHandler = e => {\r\n        const isValid = validation(e.target.value);\r\n\r\n        setState(state => ({\r\n            ...state,\r\n            oldPass: e.target.value,\r\n            valid: {...state.valid, oldPass: isValid}\r\n        }));\r\n    }\r\n\r\n    const newPasswordInputHandler = e => {\r\n        const isValid = validation(e.target.value);\r\n\r\n        setState(state => ({\r\n            ...state,\r\n            newPass: e.target.value,\r\n            valid: {...state.valid, newPass: isValid}\r\n        }));\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <BackHome />\r\n            <h1 className={classes.title}>Change Keystore File password</h1>\r\n            <Wrapper>\r\n                <div className={classes.content}>\r\n                    <InputFile\r\n                        onChange={inputFileHandler}\r\n                        name={state.fileName}\r\n                    />\r\n\r\n                    <InputPassword\r\n                        customClass={classes.inputPassword}\r\n                        onChange={oldPasswordInputHandler}\r\n                        value={state.oldPass}\r\n                        placeholder=\"Enter password\"\r\n                    />\r\n                \r\n                    <InputPassword\r\n                        customClass={classes.inputPassword}\r\n                        onChange={newPasswordInputHandler}\r\n                        value={state.newPass}\r\n                        placeholder=\"Enter new password\"\r\n                    />\r\n\r\n                    \r\n                    {state.loading\r\n                        ? <Loading />\r\n                        : <Button\r\n                            disabled={state.valid.file\r\n                                && state.valid.oldPass\r\n                                && state.valid.newPass\r\n                                ? '' : 'disabled'}\r\n                            onClick={changePasswordClickHandler}\r\n                        >Change Password</Button>\r\n                    }\r\n\r\n                    {state.message !== '' &&\r\n                        <div className={classes.message}>\r\n                            {state.message}\r\n                        </div>\r\n                    }\r\n\r\n                    {state.error !== '' &&\r\n                        <div className={classes.error}>\r\n                            Error: {state.error}\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </Wrapper>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default ChangePass;\r\n","import React from 'react';\r\nimport classes from './KeystoreInfo.module.scss';\r\n\r\nconst KeystoreInfo = (props) => {\r\n\r\n    return (\r\n        <div className={classes.infoWrapper}>\r\n            <p className={classes.title}>Info about keystore file</p>\r\n            <p>KDF: {props.kdfName}</p>\r\n            <div>\r\n                <div>\r\n                    Iteration Count\r\n                    <input\r\n                        className={classes.inputCount}\r\n                        type=\"text\"\r\n                        onChange={props.onChange}\r\n                        autoComplete=\"off\"\r\n                        autoCorrect=\"off\"\r\n                        spellCheck=\"false\"\r\n                        value={props.value}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <p className={classes.warning}>\r\n                Iteration count value must be a power of 2\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default KeystoreInfo;\r\n","import React, { Fragment, useState } from 'react';\r\nimport classes from './IterationCount.module.scss';\r\nimport BackHome from '../../components/BackHome/BackHome';\r\nimport Wrapper from '../../components/Wrapper/Wrapper';\r\nimport InputFile from '../../components/InputFile/InputFile';\r\nimport InputPassword from '../../components/InputPassword/InputPassword';\r\nimport KeystoreInfo from '../../components/KeystoreInfo/KeystoreInfo';\r\nimport Button from '../../components/Button/Button';\r\nimport Loading from '../../components/Loading/Loading';\r\nimport { readFile } from '../../utils/readFile';\r\nimport { getAccoutFromFile } from '../../utils/getAccoutFromFile';\r\nimport { generateKeystore } from '../../utils/generateKeystore';\r\nimport { downloadFile } from '../../utils/downloadFile';\r\n\r\nconst IterationCount = () => {\r\n    const [state, setState] = useState({\r\n        fileName: 'no file selected',\r\n        fileContent: '',\r\n        password: '',\r\n        count: '',\r\n        kdf: '...',\r\n        loading: false,\r\n        valid: {\r\n            file: false,\r\n            pass: false,\r\n            countValid: true\r\n        },\r\n        message: '',\r\n        error: ''\r\n    });\r\n\r\n    const validationPass = value => {\r\n        if (value && value !== '') {\r\n            return true;\r\n        } \r\n        return false;\r\n    }\r\n\r\n    const inputFileHandler = e => {\r\n        const file = e.target.files[0];\r\n\r\n        readFile(file).then(result => {\r\n            const [name, content] = result;\r\n            const isValid = content !== '';\r\n\r\n            const keyObject = JSON.parse(result[1]);\r\n\r\n            const iterationCount = \r\n                keyObject.crypto.kdfparams.n ||\r\n                keyObject.crypto.kdfparams.c;\r\n            \r\n            setState(state => ({\r\n                ...state,\r\n                fileName: name,\r\n                fileContent: content,\r\n                kdf: keyObject.crypto.kdf,\r\n                count: iterationCount,\r\n                valid: {...state.valid, file: isValid}\r\n            }));\r\n        }).catch(error => {\r\n            setState(state => ({\r\n                ...state,\r\n                error: error.message\r\n            }));\r\n        });\r\n    }\r\n\r\n    const inputPasswordHandler = e => {\r\n        const isValid = validationPass(e.target.value);\r\n\r\n        setState(state => ({\r\n            ...state,\r\n            password: e.target.value,\r\n            valid: {...state.valid, pass: isValid}\r\n        }));\r\n    }\r\n\r\n    const validationCount = (num) => !(num & (num - 1)) && num !== 0;\r\n\r\n    const inputIterationCountHandler = e => {\r\n        const regex = /^\\+?([1-9]\\d*)+$|^$/;\r\n        const valid = regex.test(e.target.value);\r\n\r\n        let value = +e.target.value;\r\n\r\n        const isCountValid = validationCount(value);\r\n\r\n        if (valid) {\r\n            setState(state => ({\r\n                ...state,\r\n                count: e.target.value,\r\n                valid: {\r\n                    ...state.valid,\r\n                    countValid: isCountValid\r\n                }\r\n            }));\r\n        }\r\n    }\r\n\r\n    const changeClickHandler = () => {\r\n        setState(state => ({\r\n            ...state,\r\n            loading: true,\r\n            message: 'Start decrypting keystore file with password...',\r\n            error: ''\r\n        }));\r\n\r\n        getAccoutFromFile(state.fileContent, state.password).then(\r\n            result => {\r\n                setState(state => ({\r\n                    ...state,\r\n                    message: 'Creating keystore file with new iteration count...'\r\n                }));\r\n\r\n                return generateKeystore(result[1], state.password, state.count)\r\n            }\r\n        ).then(\r\n            result => {\r\n                const [name, content] = result;\r\n                downloadFile(name, content);\r\n\r\n                setState(state => ({\r\n                    ...state,\r\n                    fileName: 'no file selected',\r\n                    fileContent: '',\r\n                    password: '',\r\n                    count: '',\r\n                    kdf: '...',\r\n                    loading: false,\r\n                    message: 'Iteration count changed successfully!',\r\n                    valid: {\r\n                        ...state.valid,\r\n                        file: false,\r\n                        pass: false\r\n                    }\r\n                }));\r\n            }\r\n        ).catch(error => {\r\n            setState(state => ({\r\n                ...state,\r\n                error: error.message,\r\n                message: '',\r\n                loading: false\r\n            }));\r\n        });\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <BackHome /> \r\n            <h1 className={classes.title}>\r\n                Change Iteration Count of Key Derivation Function (KDF)\r\n            </h1>\r\n            <Wrapper>\r\n                <div className={classes.content}>\r\n                    <InputFile\r\n                        onChange={inputFileHandler}\r\n                        name={state.fileName}\r\n                    />\r\n\r\n                    <InputPassword\r\n                        customClass={classes.inputPassword}\r\n                        onChange={inputPasswordHandler}\r\n                        value={state.password}\r\n                        placeholder='Enter password'\r\n                    />\r\n\r\n                    <KeystoreInfo\r\n                        onChange={inputIterationCountHandler}\r\n                        value={state.count}\r\n                        kdfName={state.kdf}\r\n                    />\r\n\r\n                    {state.loading\r\n                        ? <Loading />\r\n                        : <Button \r\n                            onClick={changeClickHandler}\r\n                            disabled={state.valid.file\r\n                                && state.valid.pass\r\n                                && state.valid.countValid\r\n                                && state.count !== ''\r\n                                ? '' : 'disabled'}\r\n                        >Change</Button>\r\n                    }\r\n\r\n                    {state.message !== '' &&\r\n                        <div className={classes.message}>\r\n                            {state.message}\r\n                        </div>\r\n                    }\r\n\r\n                    {state.error !== '' &&\r\n                        <div className={classes.error}>\r\n                            Error: {state.error}\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </Wrapper>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default IterationCount;\r\n","import React from 'react';\r\nimport classes from './TextArea.module.scss';\r\n\r\nconst TextArea = (props) => {\r\n    return (\r\n        <textarea\r\n            className={classes.textarea}\r\n            onChange={props.onChange}\r\n            value={props.value}\r\n            placeholder=\"Enter mnemonic phrase here\"\r\n        />\r\n    );\r\n}\r\n\r\nexport default TextArea;\r\n","import React from 'react';\r\nimport classes from './Switch.module.scss';\r\n\r\nconst SimpleSwitch = (props) => {\r\n    return (\r\n        <div className={classes.switcher}>\r\n            <input type=\"checkbox\"\r\n                className={classes.checkbox}\r\n                id=\"extraWordId\"\r\n                onChange={props.onChange}\r\n                checked={props.checked ? 'checked' : ''}\r\n            />\r\n            <label className={classes.label} htmlFor=\"extraWordId\" />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SimpleSwitch;\r\n","import React, { useState } from 'react';\r\nimport classes from './ExtraWord.module.scss';\r\nimport InputPassword from '../InputPassword/InputPassword';\r\nimport Switch from '../Switch/Switch';\r\n\r\nconst ExtraWord = (props) => {\r\n    const [state, setState] = useState({\r\n        checked: false\r\n    });\r\n\r\n    const checkboxHandler = () => {\r\n        setState(state => ({\r\n            ...state,\r\n            checked: !state.checked\r\n        }));\r\n        props.clearValue && props.clearValue();\r\n    }\r\n\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <div className={classes.visiblePart}>\r\n                <div className={classes.title}>\r\n                    <span className={classes.span}>\r\n                        Do you have an Extra Word?\r\n                    </span>\r\n                </div>\r\n                <div className={classes.switcherWrapper}>\r\n                    { state.checked ? <span>Yes</span> : <span>No</span>}\r\n                    <Switch\r\n                        onChange={checkboxHandler}\r\n                        checked={state.checked}\r\n                    />\r\n                </div>\r\n            </div>\r\n            {state.checked &&\r\n                <div className={classes.hiddenPart}>\r\n                    <InputPassword\r\n                        onChange={props.onChange}\r\n                        value={props.value}\r\n                        placeholder=\"Enter extra word\"\r\n                    />\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ExtraWord;\r\n","import React from 'react';\r\nimport classes from './Select.module.scss';\r\n\r\nconst Select = (props) => {\r\n    return (\r\n        <div className={classes.selectWrapper}>\r\n            <select\r\n                className={classes.selectCustom}\r\n                onChange={props.onChange}\r\n                value={props.value}\r\n            >\r\n                {props.options.map((item, i) => (\r\n                    <option value={item} key={i}>{item}</option>\r\n                ))}\r\n            </select>\r\n            <span className={classes.angleDown}>\r\n                <i className='fa fa-angle-down' aria-hidden=\"true\"></i>\r\n            </span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Select;\r\n","import React from 'react';\r\nimport classes from './CustomPath.module.scss';\r\n\r\nconst CustomPath = (props) => {\r\n    return (\r\n        <div className={classes.customPath}>\r\n            <p>Custom Path</p>\r\n            <div>\r\n                <span\r\n                    className={classes.add}\r\n                    onClick={props.addClickHandler}\r\n                >add</span>\r\n                <input\r\n                    type=\"text\"\r\n                    onChange={props.onChange}\r\n                    value={props.value}\r\n                    className={classes.input}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CustomPath;\r\n","import React from 'react';\r\nimport classes from './Account.module.scss';\r\nimport CopyToClipboard from '../CopyToClipboard/CopyToClipboard';\r\nimport Download from '../Download/Download';\r\n\r\nconst Account = ({accounts, index}) => {\r\n\r\n    return (\r\n        <div className={classes.account}>\r\n            <div className={classes.numberAccount}>{index}</div>\r\n            <div>\r\n                <div className={`wordwrap ${classes.address}`}>\r\n                    {accounts.address}\r\n                    <CopyToClipboard\r\n                        textToCopy={accounts.address}\r\n                    />\r\n                </div>\r\n                <div className={`wordwrap ${classes.privateKey}`}>\r\n                    {accounts.privateKey}\r\n                    <CopyToClipboard\r\n                        textToCopy={accounts.privateKey}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className={classes.download}>\r\n                <Download account={accounts}>\r\n                    Download\r\n                </Download>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Account;\r\n","import React, { Fragment, useState, useEffect, useCallback } from 'react';\r\nimport * as bip39 from 'bip39';\r\nimport classes from './Mnemonic.module.scss';\r\nimport BackHome from '../../components/BackHome/BackHome';\r\nimport Wrapper from '../../components/Wrapper/Wrapper';\r\nimport TextArea from '../../components/TextArea/TextArea';\r\nimport Button from '../../components/Button/Button';\r\nimport ExtraWord from '../../components/ExtraWord/ExtraWord';\r\nimport Select from '../../components/Select/Select';\r\nimport CustomPath from '../../components/CustomPath/CustomPath';\r\nimport Account from '../../components/Account/Account';\r\nimport { getAccountsFromMnemonic } from '../../utils/getAccountsFromMnemonic';\r\n\r\n\r\nconst Mnemonic = () => {\r\n    const [state, setState] = useState({\r\n        textArea: '',\r\n        mnemonic: '',\r\n        accounts: '',\r\n        isCustomPath: false,\r\n        customPath: '',\r\n        path: \"m/44'/60'/0'/0\",\r\n        pathList: [\r\n            \"m/44'/60'/0'/0\",\r\n            \"m/44'/61'/0'/0\",\r\n            \"m/44'/60'/0'\",\r\n            \"m/0'/0'/0'\",\r\n            \"Custom Path\"\r\n        ],\r\n        rangeAccounts: {start: 0, end: 5},\r\n        inputExtraWord: '',\r\n        extraWord: '',\r\n        warning: false,\r\n        errorText: '',\r\n        notValidMnemonic: false,\r\n        hiddenPart: false\r\n    });\r\n\r\n    const textAreaHandler = e => {\r\n        setState(state => ({\r\n            ...state,\r\n            textArea: e.target.value\r\n        }));\r\n    }\r\n\r\n    const extraWordHandler = e => {\r\n        setState(state => ({\r\n            ...state,\r\n            inputExtraWord: e.target.value\r\n        }));\r\n    }\r\n\r\n    const clearExtraWordInput = () => {\r\n        setState(state => ({\r\n            ...state,\r\n            inputExtraWord: ''\r\n        }));\r\n    }\r\n\r\n    const mGetAccountsFromMnemonic = useCallback(() => {\r\n        return getAccountsFromMnemonic(\r\n            state.mnemonic,\r\n            state.path,\r\n            state.rangeAccounts,\r\n            state.extraWord\r\n        );\r\n    }, [state.mnemonic, state.extraWord, state.path, state.rangeAccounts]);\r\n\r\n    useEffect(() => {\r\n        if (state.mnemonic !== '') {\r\n            const accounts = mGetAccountsFromMnemonic();\r\n\r\n            setState(state => ({\r\n                ...state,\r\n                accounts: accounts,\r\n                notValidMnemonic: false,\r\n                hiddenPart: true\r\n            }));\r\n        }\r\n\r\n    }, [mGetAccountsFromMnemonic, state.mnemonic]);\r\n\r\n    const getAccountsHandler = () => {\r\n        const mnemonicWords = state.textArea.trim();\r\n        const valid = bip39.validateMnemonic(mnemonicWords);\r\n\r\n        if (valid) {\r\n            setState(state => ({\r\n                ...state,\r\n                mnemonic: state.textArea,\r\n                extraWord: state.inputExtraWord,\r\n                notValidMnemonic: false,\r\n            }));\r\n\r\n        } else {\r\n            setState(state => ({\r\n                ...state,\r\n                notValidMnemonic: true\r\n            }));\r\n        }\r\n    }\r\n\r\n    const selectPathHandler = e => {\r\n        if (e.target.value === 'Custom Path') {\r\n            setState(state => ({\r\n                ...state,\r\n                isCustomPath: true\r\n            }));\r\n        } else {\r\n            setState(state => ({\r\n                ...state,\r\n                isCustomPath: false,\r\n                path: e.target.value\r\n            }));\r\n        }\r\n    }\r\n\r\n    const customPathHandler = e => {\r\n        setState(state => ({\r\n            ...state,\r\n            customPath: e.target.value\r\n        }));\r\n    }\r\n\r\n    const setCustomPath = () => {\r\n        const regex = /^(m\\/){1}(\\d+'{1}\\/)+(\\d+'{1}\\/)+\\d+'?$/;\r\n        const isValid = regex.test(state.customPath);\r\n\r\n        if (isValid) {\r\n            setState(state => ({\r\n                ...state,\r\n                pathList: [...state.pathList, state.customPath],\r\n                isCustomPath: false,\r\n                customPath: ''\r\n            }));\r\n        }\r\n        else {\r\n            setState(state => ({\r\n                ...state,\r\n                warning: true,\r\n                errorText: 'Invalid Path'\r\n            }));\r\n\r\n            setTimeout(() => {\r\n                setState(state => ({\r\n                    ...state,\r\n                    warning: false,\r\n                    errorText: ''\r\n                }));\r\n            }, 3000);\r\n        }\r\n    }\r\n\r\n    const prevBtnHandler = () => {\r\n        const num = Number(Object.keys(state.accounts)[0]);\r\n\r\n        if (num === 0) {\r\n            return;\r\n\r\n        } else {\r\n            const num1 = num - 5;\r\n            const num2 = num1 + 5;\r\n\r\n            setState(state => ({\r\n                ...state,\r\n                rangeAccounts: {\r\n                    ...state.rangeAccounts,\r\n                    start: num1,\r\n                    end: num2\r\n                }\r\n            }));\r\n        }\r\n    }\r\n\r\n    const nextBtnHandler = () => {\r\n        const num = Number(Object.keys(state.accounts)[0]);\r\n\r\n        const num1 = num + 5;\r\n        const num2 = num1 + 5;\r\n\r\n        setState(state => ({\r\n            ...state,\r\n            rangeAccounts: {\r\n                ...state.rangeAccounts,\r\n                start: num1,\r\n                end: num2\r\n            }\r\n        }));\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <BackHome />\r\n            <h1 className={classes.title}>Get Accounts From Mnemonic Phrase</h1>\r\n            <Wrapper>\r\n                <div className={classes.content}>\r\n                    <TextArea\r\n                        onChange={textAreaHandler}\r\n                        value={state.textArea}\r\n                    />\r\n                    <ExtraWord\r\n                        onChange={extraWordHandler}\r\n                        value={state.inputExtraWord}\r\n                        clearValue={clearExtraWordInput}\r\n                    />\r\n                    <Button onClick={getAccountsHandler}>\r\n                        Get Accounts\r\n                    </Button>\r\n\r\n                    {state.notValidMnemonic && \r\n                        <p className={classes.notice}>\r\n                            Error: Invalid Mnemonic Phrase!\r\n                        </p>\r\n                    }\r\n\r\n                    {state.hiddenPart &&\r\n                        <Fragment>\r\n                            <div className={classes.path}>\r\n                                <p>HD Derivation Path</p>\r\n                                <Select\r\n                                    options={state.pathList}\r\n                                    onChange={selectPathHandler}\r\n                                    value={state.path}\r\n                                />\r\n                            </div>\r\n                            {state.isCustomPath &&\r\n                                <CustomPath\r\n                                    onChange={customPathHandler}\r\n                                    addClickHandler={setCustomPath}\r\n                                    value={state.customPath}\r\n                                />\r\n                            }\r\n                            {state.warning && \r\n                                <p className={classes.notice}>\r\n                                    Error: {state.errorText}!\r\n                                </p>\r\n                            }\r\n                        </Fragment>\r\n                    }   \r\n                </div>\r\n\r\n                {state.hiddenPart &&\r\n                    <Fragment>\r\n                        <div className={classes.accountsWrapper}>\r\n                            {Object.entries(state.accounts).map((curr, i) => (\r\n                                <Account key={i} accounts={curr[1]} index={+curr[0] + 1} />\r\n                            ))}\r\n                        </div>\r\n                        <div className={classes.nav}>\r\n                            <span\r\n                                className={classes.navLeft}\r\n                                onClick={prevBtnHandler}\r\n                            >&#60; Prev</span>\r\n\t\t\t\t            <span\r\n                                className={classes.navRight}\r\n                                onClick={nextBtnHandler}\r\n                            >Next &#62;</span>\r\n                        </div>\r\n                    </Fragment>\r\n                }      \r\n            </Wrapper>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Mnemonic;\r\n","import * as bip39 from 'bip39';\r\nimport hdkey from 'hdkey';\r\nimport { privateToPublic, publicToAddress } from 'ethereumjs-util';\r\nimport web3Utils from 'web3-utils';\r\n\r\nexport const getAccountsFromMnemonic = (mnemonic, path = \"m/44'/60'/0'/0\", range, extraWord = '') => {\r\n    const num1 = range.start || 0;\r\n    const num2 = range.end || 5;\r\n\r\n    const seed = bip39.mnemonicToSeedSync(mnemonic, extraWord);\r\n    const root = hdkey.fromMasterSeed(seed);\r\n\r\n    const accounts = {};\r\n\r\n    for (let i = num1; i < num2; i++) {\r\n        const wallets = root.derive(path + '/' + i);\r\n\r\n        const pubKey = privateToPublic(wallets._privateKey);\r\n\r\n        const address = publicToAddress(pubKey).toString('hex');\r\n        const checkSumAddress = web3Utils.toChecksumAddress(address);\r\n        const privateKey = wallets._privateKey.toString('hex');\r\n\r\n        accounts[i] = {address: checkSumAddress, privateKey: privateKey}\r\n    }\r\n\r\n    return accounts;\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport classes from './PageNotFound.module.scss';\r\n\r\nconst PageNotFound = () => {\r\n    return (\r\n        <div className={classes.unknown}>\r\n            <p className={classes.code}>404</p>\r\n            <p className={classes.text}>Page Not Found</p>\r\n            <Link exact=\"true\" to=\"/\" className={classes.home}>\r\n                Back Home\r\n            </Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PageNotFound;\r\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Home from './pages/Home/Home';\nimport Extract from './pages/Extract/Extract';\nimport ChangePass from './pages/ChangePass/ChangePass';\nimport KeystoreFromPrivate from './pages/KeystoreFromPrivate/KeystoreFromPrivate';\nimport IterationCount from './pages/IterationCount/IterationCount';\nimport Mnemonic from './pages/Mnemonic/Mnemonic';\nimport PageNotFound from './pages/PageNotFound/PageNotFound';\n\n\nfunction App() {\n    return (\n        <div className=\"container\">\n            <Switch>\n                <Route path=\"/\" exact component={Home} />\n                <Route path=\"/extract-private-key\" component={Extract} />\n                <Route path=\"/change-keystore-pass\" component={ChangePass} />\n                <Route path=\"/keystore-from-private\" component={KeystoreFromPrivate} />\n                <Route path=\"/accounts-from-mnemonic\" component={Mnemonic} />\n                <Route path=\"/change-iteration-count\" component={IterationCount} />\n                <Route path=\"*\" component={PageNotFound} />\n            </Switch>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport { HashRouter } from 'react-router-dom';\n\nconst app = (\n    <HashRouter>\n        <React.StrictMode>\n            <App />\n        </React.StrictMode>\n    </HashRouter>\n);\n\nReactDOM.render(\n  app,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"ChangePass_title__1NgTC\",\"content\":\"ChangePass_content__3EImd\",\"inputPassword\":\"ChangePass_inputPassword__Xv3_Q\",\"message\":\"ChangePass_message__1EaXn\",\"error\":\"ChangePass_error__zBjtS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"KeystoreFromPrivate_title__1uzvV\",\"content\":\"KeystoreFromPrivate_content__1U-Pl\",\"itemWrapper\":\"KeystoreFromPrivate_itemWrapper__3xdjq\",\"text\":\"KeystoreFromPrivate_text__3XuKc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ExtraWord_wrapper__vqCXm\",\"visiblePart\":\"ExtraWord_visiblePart__Nydk0\",\"title\":\"ExtraWord_title__2miEh\",\"switcherWrapper\":\"ExtraWord_switcherWrapper__1ilx0\",\"span\":\"ExtraWord_span__2bDEu\",\"hiddenPart\":\"ExtraWord_hiddenPart__1prUP\"};","import keythereum from 'keythereum';\r\nimport web3Utils from 'web3-utils';\r\n\r\nexport const generateKeystore = async (privateKey, password, count = 131072) => {\r\n    const modPrivateKey = web3Utils.stripHexPrefix(privateKey);\r\n\r\n    const params = { keyBytes: 32, ivBytes: 16 };\r\n    const dk = keythereum.create(params);\r\n\r\n    const options = {\r\n        kdf: \"scrypt\",\r\n        cipher: \"aes-128-ctr\",\r\n        kdfparams: {dklen: 32, n: +count, r:8, p:1}\r\n    };\r\n\r\n    const result = await new Promise(resolve => {\r\n        keythereum.dump(password, modPrivateKey, dk.salt, dk.iv, options, keyObject => {\r\n\r\n            const name = `UTC--${new Date()\r\n                .toISOString().replace(/[:]/g, '-')}--${keyObject.address}`;\r\n    \r\n            const jsonContent = keythereum.exportToFile(keyObject);\r\n\r\n            resolve([name, jsonContent]);\r\n        });\r\n    });\r\n\r\n    return result;\r\n}","export const downloadFile = (name, content) => {\r\n    const filename = name;\r\n    const element = document.createElement('a');\r\n\r\n    element.setAttribute('download', filename);\r\n    const blob = new Blob([content], {type: 'application/json;charset=utf-8'});\r\n    element.setAttribute('href', URL.createObjectURL(blob));\r\n\r\n    element.style.display = 'none';\r\n    document.body.appendChild(element);\r\n    element.click();\r\n    document.body.removeChild(element);\r\n    URL.revokeObjectURL(blob);\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"IterationCount_title__3_e8C\",\"content\":\"IterationCount_content__bIMjg\",\"inputPassword\":\"IterationCount_inputPassword__35D6K\",\"message\":\"IterationCount_message__3J2L9\",\"error\":\"IterationCount_error__31VE9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"account\":\"Account_account__oYCw-\",\"numberAccount\":\"Account_numberAccount__3SE0E\",\"download\":\"Account_download__12Ulo\",\"address\":\"Account_address__3kGna\",\"privateKey\":\"Account_privateKey__2qbiF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputFileWrapper\":\"InputFile_inputFileWrapper__3cmB7\",\"label\":\"InputFile_label__3CA5_\",\"inputFile\":\"InputFile_inputFile__128F-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoWrapper\":\"KeystoreInfo_infoWrapper__196Q8\",\"title\":\"KeystoreInfo_title__3lytV\",\"inputCount\":\"KeystoreInfo_inputCount__2c1E0\",\"warning\":\"KeystoreInfo_warning___TyS8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"unknown\":\"PageNotFound_unknown__AmnRT\",\"code\":\"PageNotFound_code__26vkt\",\"text\":\"PageNotFound_text__18Zbh\",\"home\":\"PageNotFound_home__26VRZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backHome\":\"BackHome_backHome__a7joM\",\"line\":\"BackHome_line__2sBmN\",\"icon\":\"BackHome_icon__1SkRd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"InputPassword_wrapper__1JnkR\",\"input\":\"InputPassword_input__12Im9\",\"iconEye\":\"InputPassword_iconEye__3LgXF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"switcher\":\"Switch_switcher__2AAiu\",\"label\":\"Switch_label__YZo3N\",\"checkbox\":\"Switch_checkbox__2XIt4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectWrapper\":\"Select_selectWrapper__2a_yS\",\"selectCustom\":\"Select_selectCustom__3j3OF\",\"angleDown\":\"Select_angleDown__2WaiS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"customPath\":\"CustomPath_customPath__2KlfJ\",\"input\":\"CustomPath_input__ARLOq\",\"add\":\"CustomPath_add__36gub\"};"],"sourceRoot":""}